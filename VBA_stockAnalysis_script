Sub stockAnalysis()

    ' Variable declarations
    Dim ticker As String
    Dim yearlyChange As Double
    Dim percentChange As Double
    Dim totalStockVolume As Double
    Dim greatestIncreaseTicker As String
    Dim greatestIncreaseValue As Double
    Dim greatestDecreaseTicker As String
    Dim greatestDecreaseValue As Double
    Dim greatestTotalVolumeTicker As String
    Dim greatestTotalVolumeValue As Double
    Dim openPrice As Double
    Dim closePrice As Double
    Dim rowCount As Long
    Dim j As Long

    For Each ws In Worksheets
        ' Column Headers
        ws.Cells(1, 9).Value = "Ticker"
        ws.Cells(1, 10).Value = "Yearly Change"
        ws.Cells(1, 11).Value = "Percentage Change"
        ws.Cells(1, 12).Value = "Total Stock Volume"
        ws.Cells(2, 15).Value = "Greatest % Increase"
        ws.Cells(3, 15).Value = "Greatest % Decrease"
        ws.Cells(4, 15).Value = "Greatest Total Volume"
        ws.Cells(1, 16).Value = "Ticker"
        ws.Cells(1, 17).Value = "Value"
        
        ' Initialize variables
        j = 2
        totalStockVolume = 0
        openPrice = ws.Cells(2, 3).Value
        rowCount = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
        greatestIncreaseTicker = ""
        greatestIncreaseValue = 0
        greatestDecreaseTicker = ""
        greatestDecreaseValue = 0
        greatestTotalVolumeTicker = ""
        greatestTotalVolumeValue = 0
        
        ' Loop through all data
        For i = 2 To rowCount
            If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then
                ' Output Ticker
                ticker = ws.Cells(i, 1).Value
                ws.Cells(j, 9).Value = ticker

                ' Output Yearly Change
                closePrice = ws.Cells(i, 6).Value
                yearlyChange = closePrice - openPrice
                ws.Cells(j, 10).Value = yearlyChange

                ' Output Percentage Change
                If openPrice <> 0 Then
                    percentChange = yearlyChange / openPrice
                    ws.Cells(j, 11).Value = percentChange
                    ws.Cells(j, 11).NumberFormat = "0.00%"
                Else
                    ws.Cells(j, 11).Value = "0.00%"
                End If

                ' Output Total Stock Volume
                ws.Cells(j, 12).Value = totalStockVolume

                ' Update variables for the next ticker
                j = j + 1
                totalStockVolume = 0
                openPrice = ws.Cells(i + 1, 3).Value

                ' Define colors
                If yearlyChange >= 0 Then
                    ' Green
                    ws.Cells(j - 1, 10).Interior.ColorIndex = 10
                Else
                    ' Red
                    ws.Cells(j - 1, 10).Interior.ColorIndex = 3
                End If
                
                ' Update greatest values
                If percentChange > greatestIncreaseValue Then
                    greatestIncreaseValue = percentChange
                    greatestIncreaseTicker = ticker
                ElseIf percentChange < greatestDecreaseValue Then
                    greatestDecreaseValue = percentChange
                    greatestDecreaseTicker = ticker
                End If
            Else
                ' Accumulate total stock volume
                totalStockVolume = totalStockVolume + ws.Cells(i, 7).Value
                If totalStockVolume > greatestTotalVolumeValue Then
                    greatestTotalVolumeValue = totalStockVolume
                    greatestTotalVolumeTicker = ticker
                End If
            End If
        Next i
        
        ' Output Greatest % Increase, Decrease, and Total Volume
        ws.Cells(2, 16).Value = greatestIncreaseTicker
        ws.Cells(2, 17).Value = greatestIncreaseValue
        ws.Cells(2, 17).NumberFormat = "0.00%"
        ws.Cells(3, 16).Value = greatestDecreaseTicker
        ws.Cells(3, 17).Value = greatestDecreaseValue
        ws.Cells(3, 17).NumberFormat = "0.00%"
        ws.Cells(4, 16).Value = greatestTotalVolumeTicker
        ws.Cells(4, 17).Value = greatestTotalVolumeValue

        ws.Columns("I:Z").AutoFit
    Next ws
End Sub

